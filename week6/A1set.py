'''
集合内置方法完整列表
set()       创建一个集合    *空集合必须用set函数创建

copy()	    拷贝一个集合

add()	    为集合添加元素,*一次只能加一个  *可以直接添加字符串
还有一个方法，也可以添加元素，且参数可以是列表，元组，字典等，语法格式如下：
update()	给集合添加元素，可以一次加多个
    s.update( "字符串" ) 与 s.update( {"字符串"} ) 含义不同:
    s.update( {"字符串"} ) 将字符串添加到集合中，有重复的会忽略。
    s.update( "字符串" ) 将字符串拆分单个字符后，然后再一个个添加到集合中，有重复的会忽略。

clear()	移除集合中的所有元素
remove()	移除指定元素           *元素不存在会报错
discard()	删除集合中指定的元素    *元素不存在不会报错
pop()	    随机移除元素           *元素为空报错keyerror

len()   返回元素个数
'''
'''
S | T 返回一个新的集合，包括在集合S和T的所有元素
S - T 返回一个新集合，包括在集合S但不在T中的元素
S & T 返回一个新集合，包括同时在集合S和T中的元素
S ^ T 返回一个新集合， 包括集合S和T中非相同元素
(*以上操作均支持增强操作符合如S|=T:更新S包括S和T的所有元素)

S <= T 或 S < T 返回True/False， 判断S和T的子集关系
S >= T 或 S > T 返回True/False， 判断S和T的包括关系
'''

s=set({})
print(s)
s.update({'amos'},{'phoenix'},'123')
s.add('ak')
print(s)
#   手写集合计数器
t1=0
t2=len(s)
while True:
    try:
        s.pop()
    except:
        break
    else:
        t1+=1
print("手写计数器遍历{}个元素，len函数返回{}个元素，相同".format(t1,t2))
print(s)